spring:
  datasource:
    platform: postgres
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
  batch:
    initialize-schema: always
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
        session-factory:
  data:
    rest:
      base-path: api
  security:
    oauth2:
      client:
        client-id: client-id
        client-secret: client-secret
        scope: read,write, trust
        auto-approve-scopes: '.*'
facebook:
  client:
    clientId: 1082626168602167
    clientSecret: 08e29ac19e9f456cd05292cb5952c51e
    accessTokenUri: https://graph.facebook.com/oauth/access_token
    userAuthorizationUri: https://www.facebook.com/dialog/oauth
    tokenName: oauth_token
    authenticationScheme: query
    clientAuthenticationScheme: form
  resource:
    userInfoUri: https://graph.facebook.com/me


#server:
#  ssl:
#    key-store: 'classpath:keystore/repairman.jks'
#    key-store-type: JKS
#    key-password: password
#    key-alias: repairman
#    #trust-store: 'classpath:keystore/repairman.jks'
#    #trust-store-password: password
#    key-store-password: password