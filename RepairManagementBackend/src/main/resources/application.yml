server:
  port: 8080
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
  batch:
    initialize-schema: always
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
  data:
    rest:
      base-path: api
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 840952461997-5ckd3obuqnvpi13s6i501coahaja8f33.apps.googleusercontent.com
            clientSecret: kYCuVan0ijxdQTrRFljsxGhC
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 1082626168602167
            clientSecret: 08e29ac19e9f456cd05292cb5952c51e
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect